/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xgs.zwy.ui.cdHead;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.xgs.zwy.base.ThreadLocalVariable;
import com.xgs.zwy.constant.Constants;
import com.xgs.zwy.domain.CDHead;
import com.xgs.zwy.domain.SystemSetting;
import com.xgs.zwy.service.CDHeadService;
import com.xgs.zwy.service.ExpTxtService;
import com.xgs.zwy.service.impl.CDHeadServiceImpl;
import com.xgs.zwy.service.impl.ExpTxtlServiceImpl;
import com.xgs.zwy.ui.JProgressBarTest;
import com.xgs.zwy.ui.utils.JTableComm;
import com.xgs.zwy.util.ConstantUtils;
import com.xgs.zwy.vo.Item;
import com.xgs.zwy.vo.SystemSettingValidate;

/**
 *
 * @author n-194
 */
public class CDheadList extends javax.swing.JPanel {

    /**
     * Creates new form CDheadList
     */
    public CDheadList() {
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        updateCDHeadButton = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        billNOLabel = new javax.swing.JLabel();
        billNOTextField = new javax.swing.JTextField();
        i_E_FlagLabel = new javax.swing.JLabel();
        i_E_FlagComboBox = new javax.swing.JComboBox();
        i_E_PortLabel = new javax.swing.JLabel();
        i_E_PortTextField = new javax.swing.JTextField();
        trafModeLabel = new javax.swing.JLabel();
        trafModeComboBox = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        cdHeadScrollPane = new javax.swing.JScrollPane();
        cdHeadTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        importButton = new javax.swing.JButton();

        updateCDHeadButton.setText("修改舱单");
        updateCDHeadButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
			updateCDHead();
			}
		});
        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "查询面板"));

        billNOLabel.setText("总运单号：");

        i_E_FlagLabel.setText("进出口标示：");
        Item<String, String>[] i_e_Flag = ConstantUtils.map2Array(
				Constants.I_E_FLAG, true);
		i_E_FlagComboBox
				.setModel(new javax.swing.DefaultComboBoxModel(i_e_Flag));
        i_E_PortLabel.setText("进出口岸代码：");


        trafModeLabel.setText("运输方式：");

    	Item<String, String>[] trafModes = ConstantUtils.map2Array(
				Constants.TRAFMODE, false);
		trafModeComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				trafModes));
        searchButton.setText("查询");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(billNOLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billNOTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(trafModeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trafModeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(i_E_FlagLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i_E_FlagComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(i_E_PortLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(i_E_PortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchButton)
                        .addGap(69, 69, 69))))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(billNOLabel)
                    .addComponent(billNOTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i_E_FlagLabel)
                    .addComponent(i_E_FlagComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i_E_PortLabel)
                    .addComponent(i_E_PortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trafModeLabel)
                    .addComponent(trafModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)))
        );

       
        cdHeadScrollPane.setViewportView(cdHeadTable);

        addButton.setText("添加舱单");
        addButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				addCDHead();
			}
		});
        importButton.setText("转换成txt");
        importButton.addActionListener(new ActionListener() {
  			@Override
  			public void actionPerformed(ActionEvent e) {
  				excel2Txt();
  			}
  		});
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cdHeadScrollPane))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateCDHeadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(importButton)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(updateCDHeadButton)
                    .addComponent(importButton))
                .addGap(18, 18, 18)
                .addComponent(cdHeadScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        
//        model =new javax.swing.table.DefaultTableModel(headers,0);
//                model =new javax.swing.table.DefaultTableModel(
//                		new Object [][] {
//                				{null, null, null, null, null, null, null, null, null, null},
//                				{null, null, null, null, null, null, null, null, null, null}
//                		},headers
//                		
//                		) {
//                	Class[] types = new Class [] {
//                			java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
//                	};
//                	boolean[] canEdit = new boolean [] {
//                			false, false, false, false, false, false, false, false, false, false
//                	};
//                	
//                	public Class getColumnClass(int columnIndex) {
//                		return types [columnIndex];
//                	}
//                	
//                	public boolean isCellEditable(int rowIndex, int columnIndex) {
//                		return canEdit [columnIndex];
//                	}
//                };
    }// </editor-fold>
    
    
    protected void excel2Txt() {
    	int index = cdHeadTable.getSelectedRow();
		if(index==-1){
			JOptionPane.showMessageDialog(null, "请选择要修改的数据！",
					"未选择数据！", JOptionPane.ERROR_MESSAGE);
			return;
		}
		Long id = (Long) cdHeadTable.getValueAt(index, 0);
		CDHead cdHead = service.get(id);
		SystemSetting systemSetting = ThreadLocalVariable.getSystemSetting();
		
		
		 String outPath =  systemSetting.getOutPath();
		 List<String> error =  SystemSettingValidate.validateSystemSetting(systemSetting);
		 if(error.size()>0){
			 String msg = "";
			 for (String string : error) {
				 msg += (string+"\n");
			}
			 JOptionPane.showMessageDialog(null, msg,
						"对不起，出错了！", JOptionPane.ERROR_MESSAGE);
			 return;
		 }
		 
		 String inPath = SystemSettingValidate.getInputPath(systemSetting);
		 JProgressBarTest jProgressBarTest = new JProgressBarTest();
		 jProgressBarTest.setVisible(true);
		 try {
			expTxtService.createExpTxt(inPath, outPath, cdHead);
			jProgressBarTest.setVisible(false);
		} catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, e.getMessage(),
					"对不起，出错了！", JOptionPane.ERROR_MESSAGE);
			jProgressBarTest.setVisible(false);
		}
		
	}

	protected void updateCDHead() {
    	int index = cdHeadTable.getSelectedRow();
		if(index==-1){
			JOptionPane.showMessageDialog(null, "请选择要修改的数据！",
					"未选择数据！", JOptionPane.ERROR_MESSAGE);
			return;
		}
		Long id = (Long) cdHeadTable.getValueAt(index, 0);
		CDHead cdHead = service.get(id);
		new CDHeadDialog(cdHead,this);
		
	}
    protected void addCDHead() {
    	new CDHeadDialog(this);
    	
    }

	public void initData(){
    	
    	List<CDHead> list = service.list();
    	model = new DefaultTableModel(headers,0);
    	
    	if(list!=null&&list.size()>0){
    		for (CDHead cdHead : list) {
    			Object[] object = new Object[]{cdHead.getId(),cdHead.getBillNO(), cdHead.getVoyageNO(),Constants.I_E_FLAG.get(cdHead.getI_E_Flag()), cdHead.getTotalCount(),
    					cdHead.getTotalWT(),cdHead.getI_E_Date(),cdHead.getDestinationPort(),cdHead.getI_E_Port(),Constants.TRAFMODE.get(cdHead.getTrafMode()),
    					cdHead.getImportTime()};
    			model.addRow(object);
			}
    	}
    	 cdHeadTable.setModel(model);
    	 JTableComm.HiddenCell(cdHeadTable, 0);
    }
    // Variables declaration - do not modify
    private javax.swing.JButton addButton;
    private javax.swing.JLabel billNOLabel;
    private javax.swing.JTextField billNOTextField;
    private javax.swing.JScrollPane cdHeadScrollPane;
    private javax.swing.JTable cdHeadTable;
    private JComboBox i_E_FlagComboBox;
    private javax.swing.JLabel i_E_FlagLabel;
    private javax.swing.JLabel i_E_PortLabel;
    private javax.swing.JTextField i_E_PortTextField;
    private javax.swing.JButton importButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox trafModeComboBox;
    private javax.swing.JLabel trafModeLabel;
    private javax.swing.JButton updateCDHeadButton;
    private String[] headers = new String [] {
            "id","总运单号", "运输工具名称", "进出口标志", "主单件数", "主单重量", "进出口日期", "起运港(抵运港)", "进出口岸代码", "运输方式代码", "导入时间"
        };
    private DefaultTableModel model;
    private CDHeadService service = new CDHeadServiceImpl();
    private ExpTxtService expTxtService = new ExpTxtlServiceImpl();
    // End of variables declaration
}
