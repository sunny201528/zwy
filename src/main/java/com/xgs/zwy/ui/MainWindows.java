/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xgs.zwy.ui;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import com.xgs.zwy.base.ThreadLocalVariable;
import com.xgs.zwy.domain.SystemSetting;
import com.xgs.zwy.service.SystemSettingService;
import com.xgs.zwy.service.impl.SystemSettingServiceImpl;
import com.xgs.zwy.util.HibernateConfigUtils;

/**
 * 
 * @author n-194
 */
public class MainWindows extends javax.swing.JFrame  {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5517862367149832219L;
	
	private JPanel panel=null;
	  	private javax.swing.JToolBar toolBar;
	    private javax.swing.JButton cdHeadButton;
	    private javax.swing.JButton settingButton;
	    private CardLayout cardLayout ;
	/**
	 * Creates new form MainWindows
	 */
	public MainWindows() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		toolBar = new javax.swing.JToolBar();
		 cdHeadButton =new JButton();
		 settingButton =new JButton();
	        cdHeadButton.setText("舱单转换");
	        toolBar.add(cdHeadButton);
	        cdHeadButton.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					chickCDHeadMenu(e);
					
				}
			});
	        settingButton.setText("全局配置");
	        toolBar.add(settingButton);
	        settingButton.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					chickSettingMenu(e);
				}
			});
	        add(toolBar,BorderLayout.NORTH);
		panel = new JPanel();
		
		 cardLayout = new CardLayout();
		panel.setLayout(cardLayout);
		panel.add("SystemSettingPanel", new SystemSettingPanel());
		panel.add("CDHeadPanel", new CDHeadPanel());
		panel.add("CDHeadPanel2", new com.xgs.zwy.util.CDHeadPanel());
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("中外运空运");
		setLocationRelativeTo(null); 
		panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		this.add(panel);
		showPanel();
		cardLayout.show(panel, "CDHeadPanel2");
		pack();
		setVisible(true);
	}// </editor-fold>

	
	protected void chickSettingMenu(ActionEvent e) {
		cardLayout.show(panel, "SystemSettingPanel");
	}

	protected void chickCDHeadMenu(ActionEvent e) {
		
		if(ThreadLocalVariable.getSystemSetting()==null){
			JOptionPane.showMessageDialog(null, "没有设置输出输入路径，请设置！", "提示信息！",
					JOptionPane.ERROR_MESSAGE);
			cardLayout.show(panel, "SystemSettingPanel");
			return ;
		}
		System.out.println("1111");
		cardLayout.show(panel, "CDHeadPanel");
	}

	private  void showPanel(){
			SystemSettingService systemSettingService = new SystemSettingServiceImpl();
			SystemSetting systemSetting= systemSettingService.get(SystemSetting.ID);
			if(systemSetting==null){
				cardLayout.show(panel, "SystemSettingPanel");
			}else{
				ThreadLocalVariable.setSystemSetting(systemSetting);
				cardLayout.show(panel, "CDHeadPanel");
			}
			
	}
	public static void main(String args[]) {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainWindows.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainWindows.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainWindows.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainWindows.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		 JProgressBarTest jProgressBarTest = new JProgressBarTest();
		jProgressBarTest.setVisible(true);
		try {
			HibernateConfigUtils.initConfiguration();
		} catch (Exception e) {
			e.printStackTrace();
			int status = JOptionPane.showOptionDialog(null,"对不起系统启动错误！","确认提示",JOptionPane.YES_OPTION,JOptionPane.ERROR_MESSAGE,null,new String[]{" 确定 "},null);
			if(status!=999999){
				System.exit(ERROR);
			}
		}
		jProgressBarTest.dispose();
		new LoginWindows();
	}

	
}
