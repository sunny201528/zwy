/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xgs.zwy.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.xgs.zwy.base.ThreadLocalVariable;
import com.xgs.zwy.domain.SystemSetting;
import com.xgs.zwy.ui.cdHead.CDHeadDialog;

/**
 *
 * @author n-194
 */
public class TransformPanel extends javax.swing.JPanel implements ActionListener  {

    /**
     * Creates new form TransformPanel
     */
    public TransformPanel() {
        initComponents();
        initValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    
    private void initValue(){
    	SystemSetting setting = ThreadLocalVariable.getSystemSetting();
    	if(setting!=null&&setting.getOutPath()!=null&&!setting.getOutPath().trim().equals("")){
    		outputPath.setText(setting.getOutPath().trim());
		}
//    	if(setting!=null&&setting.getInPath()!=null&&!setting.getInPath().trim().equals("")){
//    		inputPath.setText(setting.getInPath().trim());
//		}
    }
    private void initComponents() {

        inputLable = new javax.swing.JLabel();
        inputPath = new javax.swing.JTextField();
        inputFileBtn = new javax.swing.JButton();
        outputLable = new javax.swing.JLabel();
        outputPath = new javax.swing.JTextField();
        outputFileBtn = new javax.swing.JButton();
        excel2XmlBtn = new javax.swing.JButton();

        inputLable.setText("输入文件：");


        inputFileBtn.setText("选择文件");

        outputLable.setText("输出目录：");

        outputFileBtn.setText("选择目录");

        excel2XmlBtn.setText("转换");
        inputFileBtn.addActionListener(this);
		outputFileBtn.addActionListener(this);
		excel2XmlBtn.addActionListener(this);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(outputLable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outputPath, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputLable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputPath)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputFileBtn)
                    .addComponent(outputFileBtn))
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(excel2XmlBtn)
                .addGap(75, 75, 75))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLable)
                    .addComponent(inputFileBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputLable)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(outputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(outputFileBtn)))
                .addGap(48, 48, 48)
                .addComponent(excel2XmlBtn)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>
    // Variables declaration - do not modify
    private javax.swing.JButton excel2XmlBtn;
    private javax.swing.JButton inputFileBtn;
    private javax.swing.JLabel inputLable;
    private javax.swing.JTextField inputPath;
    private javax.swing.JButton outputFileBtn;
    private javax.swing.JLabel outputLable;
    private javax.swing.JTextField outputPath;
    private JFileChooser jfc ;
    // End of variables declaration
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource().equals(inputFileBtn)) {// 判断触发方法的按钮是哪个
			jfc = new JFileChooser();
			jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);// 设定只能选择到文件
			int state = jfc.showOpenDialog(this);// 此句是打开文件选择器界面的触发语句
			if (state == 1) {
				inputPath.setText("");
				return;// 撤销则返回
			} else {
				File f = jfc.getSelectedFile();// f为选择到的目录
				inputPath.setText(f.getAbsolutePath());
			}
		}
		if (e.getSource().equals(outputFileBtn)) {// 判断触发方法的按钮是哪个
			jfc = new JFileChooser();
			jfc.setFileSelectionMode(1);// 设定只能选择到文件夹
			int state = jfc.showOpenDialog(this);// 此句是打开文件选择器界面的触发语句
			if (state == 1) {
				outputPath.setText("");
				return;// 撤销则返回
			} else {
				File f = jfc.getSelectedFile();// f为选择到的目录
				outputPath.setText(f.getAbsolutePath());
			}
		}
		
		if (e.getSource().equals(excel2XmlBtn)) {// 判断触发方法的按钮是哪个

			String input = inputPath.getText();
			String output = outputPath.getText();
			if (input == null || input.trim().equals("")) {
					
					JOptionPane.showMessageDialog(null, "请选择要转换的文件！", "提示信息！",
							JOptionPane.ERROR_MESSAGE);
					return ;
			}
			if (output == null || output.trim().equals("")) {
				
					
					JOptionPane.showMessageDialog(null, "请选择输出的文件目录", "提示信息！",
							JOptionPane.ERROR_MESSAGE);
					return;
			}
			try {
				new CDHeadDialog(input.trim(), output.trim());
			} catch (Exception ex) {
				JOptionPane.showMessageDialog(null, ex.getMessage(),
						"对不起，出错了！", JOptionPane.ERROR_MESSAGE);
				ex.printStackTrace();
			}

		}
		
	}
}
